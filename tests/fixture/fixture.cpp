#include <koinos/tests/fixture.hpp>

#include <koinos/crypto/merkle_tree.hpp>
#include <koinos/log/log.hpp>

using namespace std::string_literals;
using namespace std::chrono_literals;

namespace koinos::tests {

fixture::fixture( const std::string& name, const std::string& log_level )
{
  koinos::log::initialize( name, log_level );
  LOG( info ) << "Initializing fixture";

  _controller = std::make_unique< chain::controller >( 10'000'000 );
  auto seed   = "test seed"s;
  _block_signing_private_key =
    *crypto::private_key::regenerate( *crypto::hash( koinos::crypto::multicodec::sha2_256, seed.c_str(), seed.size() ) );

  _state_dir = std::filesystem::temp_directory_path() / boost::filesystem::unique_path().string();
  LOG( info ) << "Using temporary directory: " << _state_dir.string();
  std::filesystem::create_directory( _state_dir );

  auto entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::genesis_key );
  entry->set_value( koinos::util::converter::as< std::string >( _block_signing_private_key.get_public_key()->to_address_bytes() ) );
  *entry->mutable_space() = chain::state::space::metadata();

  koinos::chain::resource_limit_data rd;

  rd.set_disk_storage_cost( 10 );
  rd.set_disk_storage_limit( 409'600 );

  rd.set_network_bandwidth_cost( 5 );
  rd.set_network_bandwidth_limit( 1'048'576 );

  rd.set_compute_bandwidth_cost( 1 );
  rd.set_compute_bandwidth_limit( 100'000'000 );

  entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::resource_limit_data );
  entry->set_value( util::converter::as< std::string >( rd ) );
  *entry->mutable_space() = chain::state::space::metadata();

  koinos::chain::max_account_resources mar;

  mar.set_value( 10'000'000 );

  entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::max_account_resources );
  entry->set_value( util::converter::as< std::string >( mar ) );
  *entry->mutable_space() = chain::state::space::metadata();

  entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::protocol_descriptor );

  // protoc --experimental_allow_proto3_optional --descriptor_set_out=build/koinos_protocol.pb --include_imports `find
  // koinos -name 'protocol.proto'`
  std::string protocol_descriptor = util::from_hex< std::string >(
    "" );
  entry->set_value( protocol_descriptor );
  *entry->mutable_space() = chain::state::space::metadata();

  koinos::chain::compute_bandwidth_registry cbr;

  for( const auto& [ key, value ]: _thunk_compute )
  {
    auto centry = cbr.add_entries();
    centry->set_name( key );
    centry->set_compute( value );
  }

  entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::compute_bandwidth_registry );
  entry->set_value( util::converter::as< std::string >( cbr ) );
  *entry->mutable_space() = chain::state::space::metadata();

  entry = _genesis_data.add_entries();
  entry->set_key( chain::state::key::block_hash_code );
  entry->set_value( util::converter::as< std::string >(
    unsigned_varint{ std::underlying_type_t< crypto::multicodec >( crypto::multicodec::sha2_256 ) } ) );
  *entry->mutable_space() = chain::state::space::metadata();

  _alice_private_key =
    *koinos::crypto::private_key::regenerate( *koinos::crypto::hash( koinos::crypto::multicodec::sha2_256, "alice"s ) );
  _alice_address = koinos::util::converter::as< std::string >( _alice_private_key.get_public_key()->to_address_bytes() );

  koinos::chain::object_space alice_space;
  alice_space.set_system( false );
  alice_space.set_zone( _alice_address );
  alice_space.set_id( 0 );

  entry = _genesis_data.add_entries();
  entry->set_key( _alice_address );
  entry->set_value( "alpha bravo charlie delta" );
  *entry->mutable_space() = alice_space;

  LOG( info ) << "Opening controller";
  _controller->open( _state_dir, _genesis_data, chain::fork_resolution_algorithm::fifo, false );
}

fixture::~fixture()
{
  boost::log::core::get()->remove_all_sinks();
  std::filesystem::remove_all( _state_dir );
}

void fixture::set_block_merkle_roots( protocol::block& block, crypto::multicodec code, crypto::digest_size size )
{
  std::vector< crypto::multihash > hashes;
  hashes.reserve( block.transactions().size() * 2 );

  for( const auto& trx: block.transactions() )
  {
    hashes.emplace_back( *crypto::hash( code, trx.header(), size ) );
    hashes.emplace_back( *crypto::hash( code, trx.signatures(), size ) );
  }

  auto transaction_merkle_tree = *crypto::merkle_tree< crypto::multihash >::create( code, hashes );
  block.mutable_header()->set_transaction_merkle_root(
  util::converter::as< std::string >( transaction_merkle_tree.root()->hash() ) );
}

void fixture::sign_block( protocol::block& block, crypto::private_key& block_signing_key )
{
  auto id_mh = *crypto::hash( crypto::multicodec::sha2_256, block.header() );
  block.set_signature( util::converter::as< std::string >( *block_signing_key.sign_compact( id_mh ) ) );
}

void fixture::set_transaction_merkle_roots( protocol::transaction& transaction,
                                            crypto::multicodec code,
                                            crypto::digest_size size )
{
  std::vector< crypto::multihash > operations;
  operations.reserve( transaction.operations().size() );

  for( const auto& op: transaction.operations() )
  {
    operations.emplace_back( *crypto::hash( code, op, size ) );
  }

  auto operation_merkle_tree = *crypto::merkle_tree< crypto::multihash >::create( code, operations );
  transaction.mutable_header()->set_operation_merkle_root(
    util::converter::as< std::string >( operation_merkle_tree.root()->hash() ) );
}

void fixture::add_signature( protocol::transaction& transaction, crypto::private_key& transaction_signing_key )
{
  auto id_mh = util::converter::to< crypto::multihash >( transaction.id() );
  transaction.add_signatures( util::converter::as< std::string >( *transaction_signing_key.sign_compact( id_mh ) ) );
}

void fixture::sign_transaction( protocol::transaction& transaction, crypto::private_key& transaction_signing_key )
{
  auto address = transaction_signing_key.get_public_key()->to_address_bytes();
  transaction.mutable_header()->set_payer(
    std::string( reinterpret_cast< const char* >( address.data() ), address.size() ) );
  auto id_mh = *crypto::hash( crypto::multicodec::sha2_256, transaction.header() );
  transaction.set_id( util::converter::as< std::string >( id_mh ) );
  transaction.clear_signatures();
  transaction.add_signatures( util::converter::as< std::string >( *transaction_signing_key.sign_compact( id_mh ) ) );
}

} // namespace koinos::tests
